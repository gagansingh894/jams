# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mldeploy.api import mldeploy_pb2 as mldeploy__pb2


class DeploymentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Deploy = channel.unary_unary(
                '/api.mldeploy.v1.DeploymentService/Deploy',
                request_serializer=mldeploy__pb2.DeployRequest.SerializeToString,
                response_deserializer=mldeploy__pb2.DeployResponse.FromString,
                )
        self.Info = channel.unary_unary(
                '/api.mldeploy.v1.DeploymentService/Info',
                request_serializer=mldeploy__pb2.InfoRequest.SerializeToString,
                response_deserializer=mldeploy__pb2.InfoResponse.FromString,
                )
        self.Predict = channel.unary_unary(
                '/api.mldeploy.v1.DeploymentService/Predict',
                request_serializer=mldeploy__pb2.PredictRequest.SerializeToString,
                response_deserializer=mldeploy__pb2.PredictResponse.FromString,
                )


class DeploymentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Deploy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeploymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Deploy': grpc.unary_unary_rpc_method_handler(
                    servicer.Deploy,
                    request_deserializer=mldeploy__pb2.DeployRequest.FromString,
                    response_serializer=mldeploy__pb2.DeployResponse.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=mldeploy__pb2.InfoRequest.FromString,
                    response_serializer=mldeploy__pb2.InfoResponse.SerializeToString,
            ),
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=mldeploy__pb2.PredictRequest.FromString,
                    response_serializer=mldeploy__pb2.PredictResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.mldeploy.v1.DeploymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeploymentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Deploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.mldeploy.v1.DeploymentService/Deploy',
            mldeploy__pb2.DeployRequest.SerializeToString,
            mldeploy__pb2.DeployResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.mldeploy.v1.DeploymentService/Info',
            mldeploy__pb2.InfoRequest.SerializeToString,
            mldeploy__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.mldeploy.v1.DeploymentService/Predict',
            mldeploy__pb2.PredictRequest.SerializeToString,
            mldeploy__pb2.PredictResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
